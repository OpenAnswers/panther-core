# ## Syslog specific settings

agent:
  type: syslogd

  # Map a syslog severity (left) to an event console severity (right)
  # Syslog levels are 7-0, 0 being most important
  # Event console severities is 1-5  (0 or -1 will be removed)
  severity_map:
    debug: 1
    info: 2
    notice: 2
    warn: 3
    err: 3
    crit: 4
    alert: 5
    emerg: 5

  # Syslog fields are mapped to event console fields
  field_map:
    facility: 'facility'
    message: 'summary'
    host: 'node'

  # Make some changes to event console fields
  # Possible options are:
  #  - `lower_case`
  field_transform:
    node: 'to_lower_case'

  # Event console Identifier.
  # The identifier is the key used by the console to aggregate
  # multiple log entries into one event.
  # This is the default that will be applied unlesss you set
  # a different `identifier` field in your rule set
  identifier: '{node}:{severity}:{summary}'

  rules:
    - name: set agent 5424
      set:
        agent: syslogd RFC5424
      equals:
        input.type: RFC5424
      uuid: b8b67d50-f7c8-11ec-8df0-6d4ca7857473
    - name: set agent 3164
      set:
        agent: syslogd RFC3164
      equals:
        input.type: RFC3164
      uuid: d2541b50-f7c8-11ec-8df0-6d4ca7857473
    - name: rfc5424 app tag
      field_exists: input.appName
      set:
        tag: '{input.appName}'
    - name: 'Separate rfc3164 tag[pid] and message ( `[nnn]: ` in the first 64 characters)'
      match:
        summary: "/^(.{1,63}?\\]):\\s([\\s\\S]*)$/"
      field_missing: tag
      set:
        tag: '{match.1}'
        summary: '{match.2}'
    - name: 'Separate rfc3164 tag and message (":" and/or " " in the first 32 characters)'
      match:
        summary: "/^(.{1,32}?):?\\s([\\s\\S]*)$/"
      field_missing: tag
      set:
        tag: '{match.1}'
        summary: '{match.2}'
    - name: Trim any leading and trailing whitespace from summary
      match:
        summary: "/^\\s*([\\s\\S]*?)\\s*$/m"
      set:
        summary: '{match.1}'
    - name: 'Add a newline if missing, to match rfc5424 format'
      match:
        summary: "/[^\\n]$/"
      set:
        summary: |
          {summary}
      skip: true
    - name: 'Seperate the pid from a tag that has the tag[pid] format'
      match:
        tag: "/(.*?)\\[(\\d+)\\]/"
      set:
        tag: '{match.1}'
        pid: '{match.2}'
    - name: log4j v2 structured message
      field_exists: input.structuredData.thread
      set:
        summary: '{input.structuredData.priority} {input.structuredData.category} {input.structuredData.exception} {input.structuredData.message}'
