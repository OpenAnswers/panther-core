{
  "info": {
    "title": "Panther Console API",
    "version": "1.0.0"
  },
  "basePath": "/api",
  "openapi": "3.0.0",
  "components": {
    "securitySchemes": {
      "SessionCookie": {
        "type": "apiKey",
        "in": "cookie",
        "name": "panther.sid"
      },
      "ApiKeyToken": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-token"
      }
    }
  },
  "security": [
    {
      "SessionCookie": []
    }
  ],
  "servers": [
    {
      "url": "{protocol}://{hostname}:{port}/api",
      "variables": {
        "protocol": {
          "enum": ["http", "https"],
          "default": "http"
        },
        "hostname": {
          "enum": ["panther.support", "localhost"],
          "default": "localhost"
        },
        "port": {
          "enum": [80, 443, 3001, 5001],
          "default": 3001
        }
      }
    }
  ],
  "paths": {
    "/": {
      "get": {
        "summary": "api welcome",
        "responses": {
          "200": {
            "description": "welcome message",
            "content": {
              "application/json": {
                "example": {
                  "name": "api",
                  "data": "Hello there! I am the Panther api",
                  "version": 1
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "enum": ["api"]
                    },
                    "data": {
                      "type": "string"
                    },
                    "version": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/filters": {
      "get": {
        "summary": "filters base path",
        "responses": {
          "401": {
            "$ref": "#/responses/Unauthorised"
          },
          "405": {
            "$ref": "#/responses/NotImplemented"
          }
        }
      }
    },
    "/severities": {
      "get": {
        "summary": "severities base path",
        "responses": {
          "401": {
            "$ref": "#/responses/Unauthorised"
          },
          "405": {
            "$ref": "#/responses/NotImplemented"
          }
        }
      }
    },
    "/rules/global": {
      "get": {
        "summary": "global rules base path",
        "responses": {
          "401": {
            "$ref": "#/responses/Unauthorised"
          },
          "405": {
            "$ref": "#/responses/NotImplemented"
          }
        }
      }
    },
    "/rules/groups": {
      "get": {
        "summary": "group rules base path",
        "responses": {
          "401": {
            "$ref": "#/responses/Unauthorised"
          },
          "405": {
            "$ref": "#/responses/NotImplemented"
          }
        }
      }
    },
    "/rules/group/{groupId}": {
      "get": {
        "summary": "retrieve one rule",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "all"
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/responses/Unauthorised"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "405": {
            "$ref": "#/responses/NotImplemented"
          }
        }
      }
    },
    "/groups": {
      "get": {
        "summary": "API base path groups",
        "responses": {
          "200": {
            "description": "List of Groups",
            "content": {
              "application/json": {
                "example": {
                  "name": "groups",
                  "data": ["all", "some", "none"]
                },
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/GeneralApiResponseArray"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "name": {
                          "enum": ["groups"]
                        },
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/definitions/GroupName"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorised"
          }
        }
      }
    },
    "/rules": {
      "get": {
        "summary": "list all rules",
        "responses": {
          "401": {
            "$ref": "#/responses/Unauthorised"
          },
          "405": {
            "$ref": "#/responses/NotImplemented"
          }
        }
      }
    },
    "/actions": {
      "get": {
        "summary": "API actions list",
        "responses": {
          "200": {
            "description": "List of action names",
            "content": {
              "application/json": {
                "example": {
                  "name": "actions",
                  "data": ["discard", "replace", "set", "stop", "stop_rule_set"]
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "enum": ["actions"]
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/ActionName"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorised"
          }
        }
      }
    },
    "/actions_obj": {
      "get": {
        "summary": "API actions object format",
        "responses": {
          "200": {
            "description": "Action names",
            "content": {
              "application/json": {
                "example": {
                  "name": "actions_obj",
                  "data": {
                    "discard": {
                      "name": "discard",
                      "description": "Discards the event immediately, and applies no further processing.",
                      "friendly_name": "Discard",
                      "friendly_after": "this event",
                      "input": []
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "enum": ["actions_obj"]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "discard": {
                          "$ref": "#/definitions/ActionDiscard"
                        },
                        "replace": {
                          "$ref": "#/definitions/ActionReplace"
                        },
                        "set": {
                          "$ref": "#/definitions/ActionSet"
                        },
                        "stop": {
                          "$ref": "#/definitions/ActionStop"
                        },
                        "stop_rule_set": {
                          "$ref": "#/definitions/ActionStopRuleSet"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorised"
          }
        }
      }
    },
    "/selects": {
      "get": {
        "summary": "API selections list",
        "responses": {
          "200": {
            "description": "List of selection criterion",
            "content": {
              "application/json": {
                "example": {
                  "name": "selects",
                  "data": [
                    "all",
                    "none",
                    "match",
                    "equals",
                    "field_exists",
                    "field_missing",
                    "starts_with",
                    "ends_with",
                    "less_than",
                    "greater_than",
                    "schedule"
                  ]
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "enum": ["selects"]
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/SelectCriterion"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorised"
          }
        }
      }
    },
    "/selects_obj": {
      "get": {
        "summary": "All selectors as object",
        "responses": {
          "200": {
            "description": "Selection names",
            "content": {
              "application/json": {
                "example": {
                  "name": "selects_obj",
                  "data": {
                    "all": {
                      "name": "all",
                      "input": []
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "enum": ["selects_obj"]
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "all": {
                          "type": "object"
                        },
                        "none": {
                          "type": "object"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorised"
          }
        }
      }
    },
    "/options": {
      "get": {
        "summary": "List of all rule options",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "name": "options",
                  "data": ["author", "debug", "original", "skip", "unless"]
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "enum": ["options"]
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/RuleOption"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorised"
          }
        }
      }
    },
    "/options_obj": {
      "get": {
        "summary": "Object of all rule options",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "name": "otions_obj",
                  "data": {
                    "original": {
                      "name": "original",
                      "input": []
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "enum": ["options_obj"]
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorised"
          }
        }
      }
    },
    "/fields": {
      "get": {
        "summary": "list of available field names",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "name": "fields",
                  "data": [
                    "acknowledged",
                    "agent",
                    "external_id",
                    "first_occurrence",
                    "group",
                    "identifier",
                    "node",
                    "last_occurrence",
                    "owner",
                    "severity",
                    "state_change",
                    "summary",
                    "tag",
                    "tally"
                  ]
                },
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/GeneralApiResponseArray"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "name": {
                          "enum": ["fields"]
                        },
                        "data": {
                          "items": {
                            "$ref": "#/definitions/FieldName"
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorised"
          }
        }
      }
    },
    "/rule/{ruleId}": {
      "get": {
        "summary": "retrieve one rule",
        "parameters": [
          {
            "name": "ruleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "$ref": "#/responses/Unauthorised"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          },
          "405": {
            "$ref": "#/responses/NotImplemented"
          }
        }
      }
    },
    "/action/{actionId}": {
      "get": {
        "summary": "action definition",
        "parameters": [
          {
            "name": "actionId",
            "in": "path",
            "required": true,
            "examples": {
              "discard": {
                "value": "discard"
              },
              "replace": {
                "value": "replace"
              },
              "set": {
                "value": "set"
              },
              "stop": {
                "value": "stop"
              },
              "stop_rule_set": {
                "value": "stop_rule_set"
              }
            },
            "schema": {
              "$ref": "#/definitions/ActionName"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "example": {
                  "name": "action",
                  "id": "action",
                  "data": {
                    "name": "discard",
                    "description": "Discards the event immediately, and applies no further processing.",
                    "friendly_name": "Discard",
                    "friendly_after": "this event",
                    "input": []
                  }
                },
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/GeneralApiResponseArray"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "name": {
                          "enum": ["action"]
                        },
                        "id": {
                          "$ref": "#/definitions/ActionName"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "input": {
                              "type": "array",
                              "items": {
                                "$ref": "#/definitions/ActionInput"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorised"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/select/{selectId}": {
      "get": {
        "summary": "select description",
        "parameters": [
          {
            "name": "selectId",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SelectCriterion"
            },
            "examples": {
              "all": {
                "value": "all"
              },
              "equals": {
                "value": "equals"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "all": {
                    "value": {
                      "name": "all",
                      "id": "all",
                      "data": {
                        "name": "all",
                        "input": []
                      }
                    }
                  },
                  "equals": {
                    "value": {
                      "name": "equals",
                      "id": "equals",
                      "data": {
                        "name": "equals",
                        "description": "Matches values that are exactly the same.",
                        "friendly_before": "is",
                        "friendly_name": "equal",
                        "friendly_after": "to",
                        "help": "This is a equals field, it must match the value exactly",
                        "input": [
                          {
                            "name": "field",
                            "label": "field",
                            "type": "string"
                          },
                          {
                            "name": "value",
                            "label": "string or /regex/",
                            "type": "stregex",
                            "array": true
                          }
                        ]
                      }
                    }
                  }
                },
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/GeneralApiResponseArray"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "name": {
                          "enum": ["select"]
                        },
                        "id": {
                          "$ref": "#/definitions/SelectCriterion"
                        },
                        "data": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "input": {
                              "type": "array",
                              "items": {
                                "$ref": "#/definitions/ActionInput"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorised"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/field/{fieldId}": {
      "get": {
        "summary": "API field description record",
        "parameters": [
          {
            "name": "fieldId",
            "in": "path",
            "required": true,
            "examples": {
              "node": {
                "value": "node"
              },
              "summary": {
                "value": "summary"
              },
              "identifier": {
                "value": "identifier"
              },
              "severity": {
                "value": "severity"
              },
              "tag": {
                "value": "tag"
              }
            },
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "examples": {
                  "tag": {
                    "value": {
                      "name": "field",
                      "id": "field",
                      "data": {
                        "name": "tag",
                        "priority": "C",
                        "alias": "app",
                        "type": "String",
                        "label": "Tag",
                        "label_shrt": "Tag",
                        "size": 90,
                        "help": "Tag for the event",
                        "view": {
                          "priority": 20
                        }
                      }
                    }
                  },
                  "severity": {
                    "value": {
                      "name": "field",
                      "id": "field",
                      "data": {
                        "name": "severity",
                        "priority": "M",
                        "alias": "s",
                        "type": "Number",
                        "label": "Severity",
                        "label_shrt": "Sev",
                        "size": 60,
                        "help": "Severity of the event (0-5)",
                        "view": {
                          "priority": 120,
                          "default": true
                        }
                      }
                    }
                  }
                },
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/definitions/GeneralApiResponse"
                    },
                    {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "data": {
                          "$ref": "#/definitions/FieldRecord"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorised"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/status": {
      "get": {
        "summary": "System uptime record",
        "responses": {
          "200": {
            "description": "is it up",
            "content": {
              "application/json": {
                "example": {
                  "status": {
                    "time": {
                      "now": 1588251181072,
                      "start": 1588251060612,
                      "update": 1588251061234
                    }
                  }
                },
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "object",
                      "properties": {
                        "time": {
                          "$ref": "#/definitions/Time"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/status/time": {
      "get": {
        "summary": "System uptime record",
        "responses": {
          "200": {
            "description": "is it up",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "time": {
                      "$ref": "#/definitions/Time"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/status/time/now": {
      "get": {
        "summary": "System uptime record",
        "responses": {
          "200": {
            "description": "is it up",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/TimeNow"
                }
              }
            }
          }
        }
      }
    },
    "/status/time/start": {
      "get": {
        "summary": "System uptime record",
        "responses": {
          "200": {
            "description": "is it up",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/TimeStart"
                }
              }
            }
          }
        }
      }
    },
    "/status/time/update": {
      "get": {
        "summary": "System uptime record",
        "responses": {
          "200": {
            "description": "is it up",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/TimeUpdate"
                }
              }
            }
          }
        }
      }
    },
    "/apikey/exists/{apiKey}": {
      "get": {
        "summary": "Checks for the existence of an API key",
        "parameters": [
          {
            "name": "apiKey",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApiKey"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "found": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/apikey/read": {
      "get": {
        "summary": "List of API keys",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "integer",
                      "minimum": 0
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/ApiKeyRecord"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorised"
          }
        }
      }
    },
    "/apikey/read/{apiKey}": {
      "get": {
        "summary": "view and API key",
        "parameters": [
          {
            "name": "apiKey",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApiKey"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 1
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/definitions/ApiKeyRecord"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorised"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/apikey/delete/{apiKey}": {
      "delete": {
        "summary": "remove an API key",
        "parameters": [
          {
            "name": "apiKey",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ApiKey"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/responses/Unauthorised"
          },
          "404": {
            "$ref": "#/responses/NotFound"
          }
        }
      }
    },
    "/event/create": {
      "post": {
        "summary": "Event creation",
        "security": [
          {
            "ApiKeyToken": []
          }
        ],
        "operationId": "eventCreate",
        "requestBody": {
          "description": "Event to create",
          "required": true,
          "content": {
            "application/json": {
              "examples": {
                "appup": {
                  "value": {
                    "event": {
                      "node": "localhost",
                      "summary": "app started",
                      "severity": 1
                    }
                  }
                },
                "appdown": {
                  "value": {
                    "event": {
                      "node": "localhost",
                      "summary": "app shutdown",
                      "severity": 3
                    }
                  }
                },
                "appcrashed": {
                  "value": {
                    "event": {
                      "node": "localhost",
                      "summary": "app crashed",
                      "severity": 5
                    }
                  }
                }
              },
              "schema": {
                "type": "object",
                "properties": {
                  "event": {
                    "type": "object",
                    "required": ["node", "summary", "severity"],
                    "properties": {
                      "node": {
                        "type": "string"
                      },
                      "summary": {
                        "type": "string"
                      },
                      "tag": {
                        "type": "string"
                      },
                      "severity": {
                        "type": "integer",
                        "format": "int32",
                        "minimum": 0,
                        "maxiumum": 5
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Event created or updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "event": {
                      "type": "object",
                      "properties": {
                        "agent": {
                          "type": "string",
                          "enum": ["http"]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Not authorised",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "GeneralApiError": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "enum": ["error"]
        },
        "message": {
          "type": "string"
        }
      }
    },
    "NameRecord": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "GeneralApiResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "required": ["name"]
    },
    "GeneralApiResponseArray": {
      "allOf": [
        {
          "$ref": "#/definitions/GeneralApiResponse"
        },
        {
          "type": "object",
          "properties": {
            "data": {
              "type": "array",
              "items": "all"
            }
          }
        }
      ]
    },
    "SelectCriterion": {
      "type": "string",
      "enum": [
        "all",
        "none",
        "match",
        "equals",
        "equals",
        "field_exists",
        "field_missing",
        "starts_with",
        "ends_with",
        "less_than",
        "greater_than",
        "schedule"
      ]
    },
    "RuleOption": {
      "type": "string",
      "enum": ["author", "debug", "original", "skip", "unless"]
    },
    "ActionName": {
      "type": "string",
      "enum": ["discard", "replace", "set", "stop", "stop_rule_set"]
    },
    "GroupName": {
      "type": "string",
      "pattern": "[\\w \\-_]+"
    },
    "FieldName": {
      "type": "string",
      "pattern": "[\\w \\-_]+"
    },
    "FieldRecord": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "priority": {
          "type": "string",
          "enum": ["C", "M"]
        },
        "alias": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": ["String", "Number"]
        },
        "label": {
          "type": "string"
        },
        "label_shrt": {
          "type": "string"
        },
        "size": {
          "type": "integer",
          "minimum": 1,
          "maximum": 1000
        },
        "help": {
          "type": "string"
        },
        "uniq": {
          "type": "boolean"
        },
        "view": {
          "type": "object",
          "properties": {
            "priority": {
              "type": "integer",
              "minimum": 1
            },
            "default": {
              "type": "boolean"
            }
          }
        }
      }
    },
    "ActionInput": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "label": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "beforetext": {
          "type": "string"
        }
      },
      "required": ["name", "label", "type"]
    },
    "ActionDiscard": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "enum": ["discard"]
        },
        "description": {
          "type": "string"
        },
        "friendly_name": {
          "type": "string"
        },
        "friendly_after": {
          "type": "string"
        },
        "input": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActionInput"
          }
        }
      }
    },
    "ActionReplace": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "enum": ["replace"]
        },
        "description": {
          "type": "string"
        },
        "input": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActionInput"
          }
        }
      }
    },
    "ActionSet": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "enum": ["set"]
        },
        "description": {
          "type": "string"
        },
        "input": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActionInput"
          }
        }
      }
    },
    "ActionStop": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "enum": ["stop"]
        },
        "input": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActionInput"
          }
        }
      }
    },
    "ActionStopRuleSet": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "enum": ["stop_rule_set"]
        },
        "input": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActionInput"
          }
        }
      }
    },
    "TimeStamp": {
      "type": "integer",
      "minimum": 1
    },
    "TimeStart": {
      "type": "object",
      "properties": {
        "start": {
          "$ref": "#/definitions/TimeStamp"
        }
      }
    },
    "TimeNow": {
      "type": "object",
      "properties": {
        "now": {
          "$ref": "#/definitions/TimeStamp"
        }
      }
    },
    "TimeUpdate": {
      "type": "object",
      "properties": {
        "update": {
          "$ref": "#/definitions/TimeStamp"
        }
      }
    },
    "Time": {
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/TimeStart"
        },
        {
          "$ref": "#/definitions/TimeNow"
        },
        {
          "$ref": "#/definitions/TimeUpdate"
        }
      ]
    },
    "Error": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "enum": ["error"]
        },
        "message": {
          "type": "string"
        }
      },
      "example": {
        "name": "error",
        "message": "Unauthorised"
      }
    },
    "ApiKey": {
      "type": "string",
      "pattern": "^[a-zA-Z0-9]+$"
    },
    "ApiKeyRecord": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string",
          "pattern": "[a-zA-Z0-9]+"
        },
        "username": {
          "type": "string"
        },
        "__v": {
          "type": "number"
        },
        "created": {
          "type": "string",
          "format": "date-time"
        },
        "apikey": {
          "$ref": "#/definitions/ApiKey"
        }
      },
      "required": ["_id", "username", "apikey"]
    }
  },
  "responses": {
    "200": {
      "content": {
        "application/json": {
          "schema": {
            "$ref": "#/definitions/GeneralApiResponse"
          }
        }
      }
    },
    "Unauthorised": {
      "description": "Unauthorised",
      "content": {
        "application/json": {
          "schema": {
            "$ref": "#/definitions/Error"
          }
        }
      }
    },
    "NotFound": {
      "description": "Not Found",
      "content": {
        "application/json": {
          "schema": {
            "$ref": "#/definitions/GeneralApiError"
          }
        }
      }
    },
    "NotImplemented": {
      "description": "Not implemented",
      "content": {
        "application/json": {
          "schema": {
            "$ref": "#/definitions/NameRecord"
          }
        }
      }
    }
  },
  "tags": []
}
